{"version":3,"sources":["assets/product_test.jpeg","utils/dummy.ts","components/template/ProductPageTemplate/index.tsx","components/template/LoginTemplate/libs.js","api/index.ts","components/template/LoginTemplate/index.tsx","components/template/SignupTemplate/index.tsx","utils/validation.ts","components/template/RegisterCompanyTemplate/index.tsx","components/organisms/ProductTable/index.tsx","components/organisms/OrderTable/index.tsx","components/organisms/ManageProductTable/libs.js","components/molecules/CompanyFilter/index.tsx","components/molecules/SideBarItem/index.tsx","components/molecules/Modal/index.tsx","components/organisms/ManageProductTable/index.tsx","components/organisms/InfoForm/style.tsx","components/organisms/InfoForm/index.tsx","components/organisms/Model3DForm/index.tsx","components/template/ManageOrderTemplate/index.tsx","components/template/ManageProductTemplate/index.tsx","components/template/InfoTemplate/index.tsx","commons/constants/string.ts","components/template/AdjustPageTemplate/index.tsx","components/template/ProductDetailTemplate/index.tsx","components/basis/Content/index.tsx","assets/images/slack.png","components/basis/SideBar/index.tsx","components/basis/TopBar/libs.ts","components/basis/TopBar/style.tsx","components/basis/TopBar/index.tsx","page/Main/index.tsx","page/Login/style.tsx","page/Login/index.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["Dummy","makeProducts","num","chance","Chance","tempArr","i","push","id","integer","min","max","img","testImg","name","word","price","dollar","stock","rate","floating","fixed","create_time","date","toDateString","makeAdjusts","company","term","profit","revenue","commission","makeProductProfits","sellCount","makeOrder","customerId","count","deliveryStatus","character","pool","deliveryNumber","ssn","confirmTime","makeRegister","url_3d","ip","ProductPageTemplate","useState","products","productsHeader","map","ttl","className","productList","product","index","type","alt","src","to","Button","color","Table","striped","getLogin","titleType","api","pw","history","a","console","log","post","email","password","result","status","alert","localStorage","setItem","data","token","axios","defaults","baseURL","withCredentials","hostId","window","location","hostname","split","server","setCommonParams","params","key","getItem","setAxiosDefaultHeader","accessToken","headers","common","Authorization","get","endpoint","param","response","querystring","upload","formData","FormData","Object","keys","append","put","delete","useStyles","makeStyles","theme","root","height","width","position","top","left","image","backgroundImage","backgroundRepeat","backgroundColor","palette","grey","backgroundSize","backgroundPosition","borderRadius","paper","margin","spacing","display","flexDirection","alignItems","main","avatar","secondary","form","marginTop","submit","LoginTemplate","classes","match","useRouteMatch","setId","setPw","useHistory","title","length","Grid","container","component","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","Typography","variant","noValidate","TextField","required","fullWidth","label","autoComplete","autoFocus","onChange","e","target","value","onClick","preventDefault","Link","href","SignupTemplate","submitValue","setSubmitValue","viewModal","setViewModal","submitUserInfo","evt","JSON","stringify","handleOnChange","toggleModal","Container","Row","Col","size","Form","onSubmit","FormGroup","Label","for","Input","test","placeholder","passwordConfirm","str1","str2","phone","Modal","isOpen","toggle","centered","ModalHeader","ModalBody","ModalFooter","commpany","account_bank","account_number","account_owner","block","RegisterCompanyTemplate","props","useEffect","Jumbotron","row","FormText","check","offset","ProductTable","StyledTableCell","withStyles","createStyles","head","black","white","body","fontSize","TableCell","StyledTableRow","action","hover","TableRow","table","minWidth","OrderTable","orders","TableContainer","aria-label","TableHead","TableBody","ManageRegister","registerProduct","getRegisterProduct","CompanyFilter","selectCompanyFunc","setCompany","filteredList","setFilteredList","viewList","setViewList","companyList","getCompanies","filter","includes","onFocus","onBlur","el","SideBarItem","url","icon","NavItem","NavLink","tag","ModalMol","buttonLabel","leftButtonText","confirmButtonText","leftButtonAction","content","modal","setModal","outline","children","getContent","contents","InputGroup","InputGroupAddon","addonType","InputGroupText","defaultProps","ManageProductTable","registers","setRegisters","formStyle","createData","text","button","buttonText","ownerName","phoneNumber","businessNumber","accountnumber","accountHolder","isApprove","isBlock","rows","InfoForm","getCompanyInfo","style","Model3DForm","setProduct3D","inputRef","useRef","getProduct3DModel","current","setAttribute","uploadProduct3D","modalContent","files","ref","hidden","click","ManageOrderTemplate","TabPanel","other","role","aria-labelledby","Box","p","flexGrow","background","InfoTemplate","React","setValue","AppBar","Tabs","event","newValue","Tab","adjustTitleList","projuctProfitTitleList","monthList","AdjustPageTemplate","isAdmin","adjustsDummy","productProfitsDummy","setToggle","searchMonth","setSearchMonth","productProfitHeader","productProfits","monthOptions","adjust","month","ProductDetailTemplate","setDescImg","productGroup","group","submitProductInfo","multiple","desc","maxLength","Content","sidebarIsOpen","path","toggleSidebar","fluid","classNames","exact","ManageProductTemplate","imgStyle","SideBar","logo","Nav","vertical","faHouseUser","faChartPie","faCashRegister","faPaperPlane","faBriefcase","faQuestion","faImage","TopBarLibs","Logout","removeItem","goToRegister","NavBarStyle","ButtonStyle","borderColor","ButtonMargin","marginRight","TopBar","topbarIsOpen","setTopbarOpen","Navbar","expand","faAlignLeft","NavbarToggler","Collapse","navbar","Main","setSidebarOpen","bodyStyle","Login","App","render","pathname","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6dfca23a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/product_test.947ae717.jpeg\";","import Chance from 'chance';\nimport testImg from '../assets/product_test.jpeg';\n\nconst Dummy = {\n  makeProducts: (num: number) => {\n    const chance = new Chance();\n\n    const tempArr = [];\n    for (let i = 0; i < num; i += 1) {\n      tempArr.push({\n        id: chance.integer({ min: 0, max: 100 }),\n        img: testImg,\n        name: chance.word(),\n        price: chance.dollar(),\n        stock: chance.integer({ min: 0, max: 100 }),\n        rate: chance.floating({ min: 0, max: 5, fixed: 1 }),\n        create_time: chance.date().toDateString(),\n      });\n    }\n\n    return tempArr;\n  },\n  makeAdjusts: (num: number) => {\n    const chance = new Chance();\n\n    const tempArr = [];\n    for (let i = 0; i < num; i += 1) {\n      tempArr.push({\n        id: chance.integer({ min: 0, max: 100 }),\n        company: chance.word(),\n        term: `${chance.date().toDateString()}~${chance.date().toDateString()}`,\n        profit: chance.dollar(),\n        revenue: chance.dollar(),\n        commission: chance.dollar(),\n      });\n    }\n\n    return tempArr;\n  },\n  makeProductProfits: (num: number) => {\n    const chance = new Chance();\n\n    const tempArr = [];\n    for (let i = 0; i < num; i += 1) {\n      tempArr.push({\n        id: chance.integer({ min: 0, max: 100 }),\n        name: chance.word(),\n        price: chance.dollar(),\n        sellCount: chance.integer({ min: 0, max: 100 }),\n        profit: chance.dollar(),\n        revenue: chance.dollar(),\n        commission: chance.dollar(),\n      });\n    }\n\n    return tempArr;\n  },\n\n  makeOrder: (num: number) => {\n    const chance = new Chance();\n    const tempArr = [];\n    for (let i = 0; i < num; i += 1) {\n      tempArr.push({\n        id: chance.integer({ min: 0, max: 100 }),\n        name: chance.name(),\n        customerId: chance.word(),\n        img: testImg,\n        count: chance.integer({ min: 0, max: 100 }),\n        price: chance.dollar(),\n        deliveryStatus: chance.character({ pool: 'TF' }),\n        deliveryNumber: chance.ssn(),\n        confirmTime: chance.date().toDateString(),\n      });\n    }\n    return tempArr;\n  },\n\n  makeRegister: (num: number) => {\n    const chance = new Chance();\n    const tempArr = [];\n    for (let i = 0; i < num; i += 1) {\n      tempArr.push({\n        id: chance.integer({ min: 0, max: 100 }),\n        company: chance.name(),\n        name: chance.name(),\n        img: testImg,\n        url_3d: chance.ip(),\n        count: chance.integer({ min: 0, max: 100 }),\n        price: chance.dollar(),\n        confirmTime: chance.date().toDateString(),\n      });\n    }\n    return tempArr;\n  },\n};\n\nexport default Dummy;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Table, Button } from 'reactstrap';\nimport './style.css';\nimport { Dummy } from '../../../utils';\nimport api from '../../../api';\n\n// 임시\nimport testImg from '../../../assets/product_test.jpeg';\n\ninterface Product {\n  id: number;\n  img: string;\n  name: string;\n  price: string;\n  stock: number;\n  rate: number;\n  create_time: string;\n}\n\nconst ProductPageTemplate: React.FC = () => {\n  const productsTitleList = [\n    '',\n    '상품 아이디',\n    '이미지',\n    '상품명',\n    '판매가',\n    '별점',\n    '재고',\n    '등록일자',\n    '',\n  ];\n  // set state\n\n  const [products, setProducts] = useState(Dummy.makeProducts(10));\n  // for api data binding\n  // const [products, setProducts] = useState([] as Array<Product>);\n  // useEffect(() => {\n  //   const getProducts = async () => {\n  //     const result = await api.get('/customer/products', {});\n  //     if (result.status === 'success') {\n  //       setProducts(result.data);\n  //     }\n  //   };\n  //   getProducts();\n  // }, []);\n  const productsHeader = productsTitleList.map(ttl => (\n    <th className=\"column-title\">{ttl}</th>\n  ));\n  const productList = products.map((product, index) => (\n    <tr\n      key={product.id}\n      className={index % 2 === 0 ? 'even pointer' : 'odd pointer'}\n    >\n      <td className=\"a-center\">\n        <input type=\"checkbox\" className=\"flat\" name=\"table_records\" />\n      </td>\n      <td className=\" \">{product.id}</td>\n      <td className=\" \">\n        <img className=\"product__img\" alt=\"\" src={testImg} />\n      </td>\n      <td className=\" \">\n        {product.name} <i className=\"success fa fa-long-arrow-up\" />\n      </td>\n      <td className=\" \">{product.price}</td>\n      <td className=\" \">{5.0}</td>\n      <td className=\" \">{product.stock}</td>\n      <td className=\"a-right a-right \">{product.create_time}</td>\n      <td className=\"last\">\n        <Link to=\"/Main/Product/1\">\n          <Button color=\"secondary\">수정하기</Button>\n        </Link>\n      </td>\n    </tr>\n  ));\n\n  return (\n    <>\n      <div className=\"product-page\">\n        <div className=\"x_content\">\n          <Table striped className=\"product-table\">\n            <thead>\n              <tr className=\"headings\">{productsHeader}</tr>\n            </thead>\n\n            <tbody>{productList}</tbody>\n          </Table>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ProductPageTemplate;\n","// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nconst getLogin = async (titleType, api, id, pw, history) => {\r\n  try {\r\n    console.log(id, pw);\r\n    if (titleType === '로그인') {\r\n      // 기업 로그인\r\n      const result = await api.post('/customer/login', {\r\n        email: id,\r\n        password: pw,\r\n      });\r\n      if (result.status === 'success') {\r\n        // eslint-disable-next-line no-alert\r\n        alert('기업 로그인 성공');\r\n        localStorage.setItem('token', result.data.token);\r\n        localStorage.setItem('isAdmin', false);\r\n      } else {\r\n        localStorage.setItem('isAdmin', false);\r\n        console.log(result);\r\n      }\r\n    } else {\r\n      localStorage.setItem('isAdmin', true);\r\n      const result = await api.post('/admin/login', {\r\n        email: id,\r\n        password: pw,\r\n      });\r\n      if (result.status === 'success') {\r\n        // eslint-disable-next-line no-alert\r\n        alert('관리자 로그인 성공');\r\n        localStorage.setItem('isAdmin', true);\r\n      } else {\r\n        console.log(result);\r\n      }\r\n    }\r\n  } catch (err) {\r\n    history.push('/Main');\r\n  }\r\n};\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nconst findPw = async history => {\r\n  try {\r\n    // 여기에 비밀번호 찾기 페이지 필요\r\n    history.push('/Main');\r\n  } catch (err) {\r\n    history.push('/Main');\r\n  }\r\n};\r\n\r\nexport { getLogin, findPw };\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport axios from 'axios';\nimport * as querystring from 'querystring';\n\naxios.defaults.baseURL = 'https://angagu.github.io/ANGAGU_WEB_business/';\naxios.defaults.withCredentials = true;\n\nconst hostId = window.location.hostname.split('.')[0];\nlet server = 'http://localhost:3002';\n\n// set server url\nif (hostId === 'dev') server = 'https://dev-bapi.angadu.com';\nelse if (hostId === 'real') server = 'https://real-bapi.angagu.com';\n\n// get user token\nconst setCommonParams = (params: any) => {\n  const key = localStorage.getItem('key');\n  if (params) {\n    params.key = key;\n  } else {\n    params = { key };\n  }\n  return params;\n};\n\nconst api = {\n  setAxiosDefaultHeader(accessToken: any) {\n    axios.defaults.headers.common.Authorization = `Bearer ${accessToken}`;\n  },\n\n  async get(endpoint: string, param: any) {\n    const params = setCommonParams(param);\n    const response = await axios.get(`${server}${endpoint}`, { params });\n\n    return response.data;\n  },\n\n  async post(endpoint: string, param: any) {\n    const params = setCommonParams(param);\n    const headers = {\n      'Content-Type': 'application/x-www-form-urlencoded',\n    };\n    const response = await axios.post(\n      `${server}${endpoint}`,\n      querystring.stringify(params),\n      { headers },\n    );\n\n    return response.data;\n  },\n  async upload(endpoint: string, param: any) {\n    const params = setCommonParams(param);\n    const headers = {\n      'Content-Type': 'multipart/form-data',\n    };\n    const formData = new FormData();\n    Object.keys(params).map(key => {\n      formData.append(key, params[key]);\n      return '';\n    });\n    const response = await axios.post(`${server}${endpoint}`, formData, {\n      headers,\n    });\n    return response.data;\n  },\n\n  async put(endpoint: string, param: any) {\n    const params = setCommonParams(param);\n    const response = await axios.put(`${server}${endpoint}`, params);\n\n    return response.data;\n  },\n\n  async delete(endpoint: string, param: any) {\n    const params = setCommonParams(param);\n    const response = await axios.delete(`${server}${endpoint}`, {\n      data: params,\n    });\n\n    return response.data;\n  },\n};\n\nexport default api;\n","import React, { useState, useEffect } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useRouteMatch, useHistory } from 'react-router-dom';\nimport './style.css';\nimport { getLogin } from './libs';\nimport api from '../../../api';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '80%',\n    width: '70%',\n    position: 'absolute',\n    top: '10%',\n    left: '15%',\n  },\n  image: {\n    backgroundImage: 'url(https://source.unsplash.com/random)', // 여기에 이미지\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    borderRadius: '20px 0px 0px 20px',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  main: {\n    borderRadius: '0px 20px 20px 0px',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst LoginTemplate: React.FC = () => {\n  const classes = useStyles();\n  const match = useRouteMatch();\n  const [id, setId] = useState('');\n  const [pw, setPw] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const history = useHistory();\n  const title =\n    Object.keys(match.params).length === 0 ? '로그인' : Object.keys(match.params)[0];\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid\n        item\n        xs={12}\n        sm={8}\n        md={5}\n        component={Paper}\n        className={classes.main}\n        elevation={6}\n        square\n      >\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            {title}\n          </Typography>\n          <form className={classes.form} noValidate>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              onChange={e => {\n                setId(`${e.target.value}`);\n              }}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={e => {\n                setPw(`${e.target.value}`);\n              }}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={e => {\n                e.preventDefault();\n                getLogin(title, api, id, pw, history);\n              }}\n            >\n              로그인\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href={`/Main`} variant=\"body2\">\n                  비밀번호를 잊으셨나요?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link href={`/Login/Signup`} variant=\"body2\">\n                  {'아이디가 없으신가요? 회원가입'}\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default LoginTemplate;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  Container,\n  Row,\n  Col,\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormText,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n} from 'reactstrap';\n\nimport { isEmail, isPassword, isSame } from '../../../utils';\nimport './style.css';\n\n// 추후 nested object로 만들기\ninterface UserInfo {\n  email: string;\n  password: string;\n  passwordConfirm: string;\n  phone: string;\n  commpany: string;\n  account_bank: string;\n  account_number: string;\n  account_owner: string;\n}\nconst SignupTemplate: React.FC = () => {\n  // state & variable\n  const [submitValue, setSubmitValue] = useState({} as UserInfo);\n  const [isValid, setIsValid] = useState(false as boolean);\n  const [viewModal, setViewModal] = useState(false as boolean);\n\n  const submitUserInfo = async (evt: React.FormEvent<EventTarget>) => {\n    evt.preventDefault();\n\n    // 보내기 전 validation 필요\n    const formData = new FormData();\n\n    formData.append('data', JSON.stringify(submitValue));\n    // formData.append('name', JSON.stringify(submitValue.price));\n    console.log(formData);\n    const config = {\n      headers: {\n        'content-type': 'multipart/form-data',\n      },\n    };\n    // send api\n    // await post(url, formData, config)\n\n    alert(`submit Data!${submitValue.email}`);\n  };\n\n  const handleOnChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = evt.target as HTMLInputElement;\n    console.log(name, value);\n    setSubmitValue({ ...submitValue, [name]: value });\n  };\n\n  const checkDuplicatedEmail = () => {\n    // send api 필요\n  };\n\n  const requestAuthNumber = () => {\n    // send api 필요\n    toggleModal();\n  };\n\n  const checkAuthNumber = () => {\n    // send api 필요\n    toggleModal();\n  };\n\n  const toggleModal = () => {\n    setViewModal(!viewModal);\n  };\n\n  return (\n    <Container className=\"signup-form\">\n      <Row className=\"signup-form__row\">\n        <Col md={{ size: 5 }}>\n          <h2>회원가입</h2>\n        </Col>\n      </Row>\n      <Row className=\"signup-form__row\">\n        <Col className=\"form-content\" md={{ size: 5 }}>\n          <Form id=\"signup\" onSubmit={submitUserInfo}>\n            <FormGroup>\n              <Label for=\"userEmail\">아이디(이메일)</Label>\n              <div className=\"form-block\">\n                <Input\n                  className=\"form-block__input input--id\"\n                  type=\"text\"\n                  name=\"email\"\n                  id=\"userEmail\"\n                  value={submitValue.email}\n                  onChange={evt => {\n                    if (!isEmail(evt.target.value)) {\n                      console.log('이메일 형식이 올바르지 않습니다.');\n                    } else {\n                      console.log('이메일 가능가능~');\n                    }\n                    handleOnChange(evt);\n                  }}\n                  placeholder=\"이메일을 적어주세요.\"\n                />\n                <Button type=\"button\" size=\"sm\">\n                  중복확인\n                </Button>\n              </div>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"userPassword\">비밀번호</Label>\n              <Input\n                type=\"password\"\n                name=\"password\"\n                id=\"userPassword\"\n                value={submitValue.password}\n                onChange={evt => {\n                  if (!isPassword(evt.target.value)) {\n                    console.log('비밀번호 형식이 올바르지 않습니다.');\n                  } else {\n                    console.log('비번 가능가능~');\n                  }\n                  handleOnChange(evt);\n                }}\n                placeholder=\"비밀번호를 적어주세요.\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"userPasswordConfirm\">비밀번호 확인</Label>\n              <Input\n                type=\"password\"\n                name=\"passwordConfirm\"\n                id=\"userPasswordConfirm\"\n                value={submitValue.passwordConfirm}\n                onChange={evt => {\n                  if (!isSame(evt.target.value, submitValue.password)) {\n                    console.log('비밀번호가 다릅니다.');\n                  } else {\n                    console.log('비번 가능가능~');\n                  }\n                  handleOnChange(evt);\n                }}\n                placeholder=\"비밀번호를 한번 더 적어주세요.\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"userPhone\">휴대폰</Label>\n              <div className=\"form-block\">\n                <Input\n                  className=\"form-block__input input--phone \"\n                  type=\"text\"\n                  name=\"phone\"\n                  id=\"userPhone\"\n                  value={submitValue.phone}\n                  onChange={handleOnChange}\n                  placeholder=\"휴대폰 번호를 적어주세요.\"\n                />\n                <Button type=\"button\" size=\"sm\" onClick={requestAuthNumber}>\n                  인증번호전송\n                </Button>\n              </div>\n              <Modal isOpen={viewModal} toggle={toggleModal} size=\"sm\" centered>\n                <ModalHeader toggle={toggleModal}>인증번호 입력</ModalHeader>\n                <ModalBody>\n                  <Input type=\"text\" placeholder=\"인증번호를 입력해주세요.\" />\n                </ModalBody>\n                <ModalFooter>\n                  <Button color=\"primary\" onClick={checkAuthNumber}>\n                    인증번호확인\n                  </Button>{' '}\n                  <Button color=\"secondary\" onClick={toggleModal}>\n                    취소\n                  </Button>\n                </ModalFooter>\n              </Modal>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"userCommpany\">회사명</Label>\n              <Input\n                type=\"text\"\n                name=\"commpany\"\n                id=\"userCommpany\"\n                value={submitValue.commpany}\n                onChange={handleOnChange}\n                placeholder=\"회사 이름을 적어주세요.\"\n              />\n            </FormGroup>\n            <Row>\n              <Col xs=\"3\">\n                <FormGroup>\n                  <Label for=\"userAccount\">은행</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"account\"\n                    id=\"userAccount\"\n                    value={submitValue.account_bank}\n                    onChange={handleOnChange}\n                    placeholder=\"은행명\"\n                  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"6\">\n                <FormGroup>\n                  <Label for=\"userAccount\">계좌번호</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"account\"\n                    id=\"userAccount\"\n                    value={submitValue.account_number}\n                    onChange={handleOnChange}\n                    placeholder=\"계좌번호를 적어주세요.\"\n                  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"3\">\n                <FormGroup>\n                  <Label for=\"userAccount\">계좌주</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"account\"\n                    id=\"userAccount\"\n                    value={submitValue.account_owner}\n                    onChange={handleOnChange}\n                    placeholder=\"계좌주명\"\n                  />\n                </FormGroup>\n              </Col>\n            </Row>\n            <Row className=\"form-btn\">\n              <Button\n                className=\"form-btn__submit\"\n                type=\"submit\"\n                form=\"signup\"\n                color=\"info\"\n                block\n              >\n                안오구에 회원가입 하기\n              </Button>\n              <Col className=\"form-btn\">\n                <Link className=\"form-btn__login\" to=\"/Login\">\n                  로그인으로 돌아가기\n                </Link>\n              </Col>\n            </Row>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default SignupTemplate;\n","export const isEmail = (value: string): boolean => {\n  // eslint-disable-next-line no-useless-escape\n  const regExp = /^[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/i;\n  return regExp.test(value);\n};\nexport const isPassword = (value: string): boolean => {\n  // eslint-disable-next-line no-useless-escape\n  const regExp = /^(?=.*\\d)(?=.*[a-zA-Z])[0-9a-zA-Z]{8,12}$/;\n  return regExp.test(value);\n};\nexport const isSame = (str1: string, str2: string): boolean => {\n  return str1 === str2;\n};\n","import React, { useEffect, useState } from 'react';\nimport {\n  Jumbotron,\n  Col,\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormText,\n} from 'reactstrap';\nimport './style.css';\n\nconst RegisterCompanyTemplate: React.FC = (props:any) => {\n  useEffect(() => {\n    console.log(props);\n  }, []);\n  return (\n    <Jumbotron>\n      <Form>\n        <FormGroup row>\n          <Label for=\"businessName\" sm={2}>\n            사업자 명\n          </Label>\n          <Col sm={10}>\n            <Input\n              type=\"email\"\n              name=\"email\"\n              id=\"businessName\"\n              placeholder=\"사업자 명을 입력하세요\"\n            />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label for=\"phoneNumber\" sm={2}>\n            연락처\n          </Label>\n          <Col sm={10}>\n            <Input\n              type=\"email\"\n              name=\"phone\"\n              id=\"phoneNumber\"\n              placeholder=\"000-0000-0000\"\n            />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label for=\"exampleText\" sm={2}>\n            추가 필요사항 기입\n          </Label>\n          <Col sm={10}>\n            <Input type=\"textarea\" name=\"text\" id=\"exampleText\" />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label for=\"exampleFile\" sm={2}>\n            File\n          </Label>\n          <Col sm={10}>\n            <Input type=\"file\" name=\"file\" id=\"exampleFile\" />\n            <FormText color=\"muted\">\n              사업자 등록증, 통신판매업 신고증을 업로드해주세요\n            </FormText>\n          </Col>\n        </FormGroup>\n        <FormGroup check row>\n          <Col sm={{ size: 10, offset: 2 }}>\n            <Button>등록 신청하기</Button>\n          </Col>\n        </FormGroup>\n      </Form>\n    </Jumbotron>\n  );\n};\n\nexport default RegisterCompanyTemplate;\n","import React, { useState, useEffect } from 'react';\nimport './style.css';\nimport Chance from 'chance';\n\nfunction ProductTable(): React.ReactElement {\n  return <div />;\n}\n\nexport default ProductTable;\n","import React, { useState, useEffect } from 'react';\r\nimport { withStyles, Theme, createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Dummy } from '../../../utils';\r\nimport api from '../../../api';\r\n\r\nconst StyledTableCell = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }),\r\n)(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n  }),\r\n)(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n  img: {\r\n    width: '105px',\r\n  },\r\n});\r\n\r\nconst OrderTable = () => {\r\n  const [orders, setOrders] = useState(Dummy.makeOrder(10));\r\n  const classes = useStyles();\r\n  // const getOrder = async () => {\r\n  //   const key = localStorage.getItem('token');\r\n  //   try {\r\n  //     const result = await api.get('/company/orders', { key: key });\r\n  //     if (result.status === 'success') {\r\n  //       setOrders(result.data);\r\n  //     } else {\r\n  //       console.error('주문 조회 실패');\r\n  //     }\r\n  //   } catch {\r\n  //     console.error('주문 조회 실패');\r\n  //   }\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   getOrder();\r\n  // }, []);\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>주문 ID</StyledTableCell>\r\n            <StyledTableCell>주문고객</StyledTableCell>\r\n            <StyledTableCell>상품명</StyledTableCell>\r\n            <StyledTableCell>상품이미지</StyledTableCell>\r\n            <StyledTableCell>개수&nbsp;(개)</StyledTableCell>\r\n            <StyledTableCell>가격&nbsp;(원)</StyledTableCell>\r\n            <StyledTableCell>배송상태</StyledTableCell>\r\n            <StyledTableCell>배송장번호</StyledTableCell>\r\n            <StyledTableCell>결제 시각</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {orders.map((row: any) => (\r\n            <StyledTableRow key={row.id}>\r\n              <StyledTableCell>{row.id}</StyledTableCell>\r\n              <StyledTableCell>{row.customerId}</StyledTableCell>\r\n              <StyledTableCell>{row.name}</StyledTableCell>\r\n              <StyledTableCell>\r\n                <img className={classes.img} alt=\"\" src={row.img} />\r\n              </StyledTableCell>\r\n              <StyledTableCell>{row.count}</StyledTableCell>\r\n              <StyledTableCell>{row.price}</StyledTableCell>\r\n              <StyledTableCell>{row.deliveryStatus}</StyledTableCell>\r\n              <StyledTableCell>{row.deliveryNumber}</StyledTableCell>\r\n              <StyledTableCell>{row.confirmTime}</StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\nexport default OrderTable;\r\n","/* eslint-disable prettier/prettier */\r\n/* eslint-disable no-else-return */\r\nimport api from '../../../api';\r\n\r\nconst ManageRegister = {\r\n  registerProduct: async id => {\r\n    const key = localStorage.getItem('token');\r\n    try {\r\n      const result = await api.put(`/admin/products/${id}`);\r\n      if (result.status === 'success') {\r\n        // eslint-disable-next-line no-alert\r\n        alert('로그인 성공');\r\n      } else {\r\n        console.log(result);\r\n      }\r\n    } catch {\r\n      console.log('error');\r\n      alert('승인에 실패했습니다.');\r\n    }\r\n  },\r\n  getRegisterProduct: async () => {\r\n    const key = localStorage.getItem('token');\r\n    try {\r\n      const result = await api.get(`/admin/products`);\r\n      if (result.status === 'success') {\r\n        // eslint-disable-next-line no-alert\r\n        alert('로그인 성공');\r\n        return result.data;\r\n      } else {\r\n        return [];\r\n      }\r\n    } catch {\r\n      console.log('error');\r\n      alert('승인에 실패했습니다.');\r\n      return [];\r\n    }\r\n  },\r\n};\r\n\r\nexport default ManageRegister;\r\n","import api from 'api';\nimport React, { useState, useEffect } from 'react';\nimport { Table, Button, Container, Row, Col, Input } from 'reactstrap';\nimport { Dummy } from 'utils';\nimport { adjustTitleList, monthList } from '../../../commons/constants/string';\nimport './style.css';\n\ntype CompanyFilterProps = {\n  selectCompanyFunc: React.Dispatch<React.SetStateAction<string>>;\n};\nconst CompanyFilter: React.FC<CompanyFilterProps> = ({ selectCompanyFunc }) => {\n  const [company, setCompany] = useState('' as string);\n  // const [companyList, setCompanyList] = useState([] as Array<string>);\n  const [filteredList, setFilteredList] = useState([] as Array<string>);\n  const [viewList, setViewList] = useState(false as boolean);\n\n  // 임시\n  const companyList = [\n    '회사',\n    '탐사수',\n    'abc',\n    '딸기',\n    '젤리',\n    '토스트',\n    '디퓨저',\n    '사과',\n    '애플펜슬',\n    '무민',\n    '리라쿠마',\n    '토깽이',\n    '마스크',\n    'bluepen',\n    '이름이 짱짱 긴 회사에요오오',\n  ];\n\n  // methods\n\n  useEffect(() => {\n    getCompanies();\n  });\n  const getCompanies = async () => {\n    // const result = api.post('send adjust api', {});\n  };\n\n  const handleOnChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = evt.target as HTMLInputElement;\n    setCompany(value);\n\n    const result = companyList.filter(name => name.includes(value));\n    console.log(result);\n    if (result.length === 0) setFilteredList(['검색결과가 없습니다.']);\n    else setFilteredList(result);\n  };\n  const selectCompany = (value: string) => {\n    setCompany(value);\n    selectCompanyFunc(value);\n  };\n  return (\n    <div className=\"filter-form__content\">\n      <span className=\"content__ttl\">회사명</span>\n      <div className=\"content__input\">\n        <Input\n          autoComplete=\"off\"\n          type=\"text\"\n          name=\"companyName\"\n          id=\"filter__company-name\"\n          value={company}\n          placeholder=\"회사 검색\"\n          onChange={handleOnChange}\n          onFocus={() => setViewList(true)}\n          onBlur={() => setViewList(false)}\n        />\n        <ul\n          className={\n            viewList ? 'result-list' : 'result-list result-list--hidden'\n          }\n        >\n          {filteredList.map((el, index) => (\n            <li\n              className={\n                filteredList.length !== index + 1\n                  ? 'result-list__item'\n                  : 'result-list__item result-list__item--last'\n              }\n              onClick={() => selectCompany(el)}\n            >\n              {el}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default CompanyFilter;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faImage } from '@fortawesome/free-solid-svg-icons';\nimport { NavItem, NavLink } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport './style.css';\n\ntype SideBarItemProps = {\n  url: string;\n  title: string;\n  icon : any;\n};\nconst SideBarItem: React.FC<SideBarItemProps> = ({ url, title, icon }) => {\n  return (\n    <NavItem>\n      <NavLink tag={Link} to={url}>\n        <FontAwesomeIcon icon={icon} className=\"mr-2\" />\n        {title}\n      </NavLink>\n    </NavItem>\n  );\n};\n\nexport default SideBarItem;\n","import React, { useState } from 'react';\nimport {\n  Button,\n  Input,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n} from 'reactstrap';\nimport './style.css';\n\ntype ModalMolProps = {\n  buttonLabel: any;\n  confirmButtonText: string;\n  leftButtonText: string;\n  leftButtonAction: VoidFunction;\n  className: any;\n  title: string;\n  name: any;\n  content: React.ReactElement;\n};\n\nconst ModalMol: React.FC<ModalMolProps> & {\n  defaultProps: Partial<ModalMolProps>;\n} = props => {\n  const {\n    buttonLabel,\n    confirmButtonText,\n    leftButtonText,\n    leftButtonAction,\n    className,\n    title,\n    name,\n    content,\n  } = props;\n  const [modal, setModal] = useState(false);\n  const toggle = () => setModal(!modal);\n  // console.log(className);\n  return (\n    <div>\n      <Button outline color=\"secondary\" onClick={toggle}>\n        {buttonLabel}\n      </Button>\n      <Modal isOpen={modal} toggle={toggle} className={className}>\n        <ModalHeader toggle={toggle}>{title}</ModalHeader>\n        {content.props.children ? (\n          <ModalBody>{content}</ModalBody>\n        ) : (\n          <ModalBody>{getContent(className, name)}</ModalBody>\n        )}\n        <ModalFooter>\n          {leftButtonText ? (\n            <Button\n              color=\"secondary\"\n              className=\"modal-btn--left\"\n              onClick={leftButtonAction}\n            >\n              {leftButtonText}\n            </Button>\n          ) : null}\n          <Button color=\"primary\" onClick={toggle}>\n            변경\n          </Button>{' '}\n          <Button color=\"secondary\" onClick={toggle}>\n            취소\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\nconst getContent = (id: string, value: string) => {\n  let contents;\n  console.log(id);\n  if (id === 'password') {\n    contents = (\n      <div>\n        <InputGroup>\n          <InputGroupAddon addonType=\"prepend\">\n            <InputGroupText>{id}</InputGroupText>\n          </InputGroupAddon>\n          <Input placeholder={value} />\n        </InputGroup>\n      </div>\n    );\n  } else if (id === 'accountNumber') {\n    contents = (\n      <div>\n        <InputGroup>\n          <InputGroupAddon addonType=\"prepend\">\n            <InputGroupText>{id}</InputGroupText>\n          </InputGroupAddon>\n          <Input placeholder={value} />\n        </InputGroup>\n      </div>\n    );\n  } else if (id === 'email') {\n    contents = (\n      <div>\n        <InputGroup>\n          <InputGroupAddon addonType=\"prepend\">\n            <InputGroupText>{id}</InputGroupText>\n          </InputGroupAddon>\n          <Input placeholder={value} />\n        </InputGroup>\n      </div>\n    );\n  } else if (id === 'phoneNumber') {\n    contents = (\n      <div>\n        <InputGroup>\n          <InputGroupAddon addonType=\"prepend\">\n            <InputGroupText>{id}</InputGroupText>\n          </InputGroupAddon>\n          <Input placeholder={value} />\n        </InputGroup>\n      </div>\n    );\n  } else if (id === 'businessNumber') {\n    contents = (\n      <div>\n        <InputGroup>\n          <InputGroupAddon addonType=\"prepend\">\n            <InputGroupText>{id}</InputGroupText>\n          </InputGroupAddon>\n          <Input placeholder={value} />\n        </InputGroup>\n      </div>\n    );\n  } else if (id === '3dModelUrl') {\n    contents = (\n      <div>\n        <InputGroup>\n          <InputGroupAddon addonType=\"prepend\">\n            <InputGroupText>{id}</InputGroupText>\n          </InputGroupAddon>\n          <Input placeholder={value} />\n        </InputGroup>\n      </div>\n    );\n  }\n  return contents;\n};\n\nModalMol.defaultProps = {\n  buttonLabel: 'Modal',\n  confirmButtonText: 'Do Something',\n  leftButtonText: '',\n  className: 'modal',\n  title: '',\n  name: 'modal',\n  content: <div />,\n};\nexport default ModalMol;\n","import React, { useState, useEffect } from 'react';\r\nimport { withStyles, Theme, createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Dummy } from '../../../utils';\r\nimport ManageRegister from './libs';\r\nimport { ModalMol } from '../../molecules';\r\n\r\nconst StyledTableCell = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }),\r\n)(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n  }),\r\n)(TableRow);\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    table: {\r\n      minWidth: 700,\r\n    },\r\n    img: {\r\n      width: '105px',\r\n    },\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n  }),\r\n);\r\n\r\nconst ManageProductTable = () => {\r\n  const [isAdmin, setIsAdmin] = useState(localStorage.getItem('isAdmin'));\r\n  const [registers, setRegisters]: any = useState([]);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    // setRegisters(ManageRegister.getRegisterProduct());\r\n    setRegisters(Dummy.makeRegister(10));\r\n  }, []);\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>상품 ID</StyledTableCell>\r\n            <StyledTableCell>기업 ID</StyledTableCell>\r\n            <StyledTableCell>상품명</StyledTableCell>\r\n            <StyledTableCell>상품이미지</StyledTableCell>\r\n            <StyledTableCell>3D모델확인</StyledTableCell>\r\n            <StyledTableCell>재고&nbsp;(개)</StyledTableCell>\r\n            <StyledTableCell>가격&nbsp;(원)</StyledTableCell>\r\n            <StyledTableCell>등록 시각</StyledTableCell>\r\n            <StyledTableCell> </StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {registers.map((row: any) => (\r\n            <StyledTableRow key={row.id}>\r\n              <StyledTableCell>{row.id}</StyledTableCell>\r\n              <StyledTableCell>{row.company}</StyledTableCell>\r\n              <StyledTableCell>{row.name}</StyledTableCell>\r\n              <StyledTableCell>\r\n                <img className={classes.img} alt=\"\" src={row.img} />\r\n              </StyledTableCell>\r\n              <StyledTableCell>\r\n                <ModalMol\r\n                  title={'3D모델 확인'}\r\n                  buttonLabel={'3D 모델 확인'}\r\n                  className={'3dModelUrl'}\r\n                  name={row.url_3d}\r\n                />\r\n              </StyledTableCell>\r\n              <StyledTableCell>{row.count}</StyledTableCell>\r\n              <StyledTableCell>{row.price}</StyledTableCell>\r\n              <StyledTableCell>{row.confirmTime}</StyledTableCell>\r\n              <StyledTableCell>\r\n                <div className={classes.root}>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    onClick={e => {\r\n                      ManageRegister.registerProduct(row.id);\r\n                    }}\r\n                  >\r\n                    승인\r\n                  </Button>\r\n                </div>\r\n              </StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\nexport default ManageProductTable;\r\n","const trStyle = {\r\n  height: '30px',\r\n};\r\nconst JumboStyle = {\r\n  background: 'orange',\r\n};\r\nconst InputGroupAddonStyle = {\r\n  width: '200px',\r\n  background: 'yellow',\r\n};\r\nconst BreadcrumbItemStyle = {\r\n  background: 'green',\r\n};\r\nconst tdStyle = {\r\n  lineHeight: '20px',\r\n  verticalAlign: 'middle',\r\n};\r\nconst thStyle = {\r\n  fontSize: 'large',\r\n};\r\nconst formStyle = {\r\n  margin: '30px',\r\n};\r\n\r\nexport {\r\n  trStyle,\r\n  tdStyle,\r\n  thStyle,\r\n  formStyle,\r\n  JumboStyle,\r\n  InputGroupAddonStyle,\r\n  BreadcrumbItemStyle,\r\n};\r\n","/* eslint-disable prettier/prettier */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Col, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport { formStyle } from './style';\r\nimport { ModalMol } from '../../molecules';\r\nimport api from '../../../api';\r\n\r\nconst InfoForm: React.FC = () => {\r\n  // const [name, setName] = useState('');\r\n  // const [ownerName, setOwnerName] = useState('');\r\n  // const [businessNumber, setBusinessNumber] = useState('');\r\n\r\n  const getCompanyInfo = async () => {\r\n    const key = localStorage.getItem('token');\r\n    try{\r\n      const result = await api.get('/company/info', {\"key\": key});\r\n      if (result.status === 'success') {\r\n        // eslint-disable-next-line no-alert\r\n        alert('로그인 성공');\r\n        data = result.data;\r\n      } else {\r\n        console.log(result);\r\n      }\r\n    } catch {\r\n      console.log('error');\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    getCompanyInfo();\r\n  }, []);\r\n  return (\r\n    <Form style={formStyle}>\r\n      {rows.map((item, index) => (\r\n        <FormGroup key={`formGroup_${index}`} row>\r\n          <Label for={item.id} sm={2}>\r\n            {item.name}\r\n          </Label>\r\n          <Col sm={5}>\r\n            <Input name={item.id} id={item.id} placeholder={item.text} />\r\n          </Col>\r\n          {item.button === 1 ? (\r\n            <ModalMol\r\n              title={`${item.name} 설정`}\r\n              buttonLabel={item.buttonText}\r\n              className={item.id}\r\n              name={item.text}\r\n            />\r\n          ) : null}\r\n        </FormGroup>\r\n      ))}\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst createData = (\r\n  name: string,\r\n  id: string,\r\n  text: string,\r\n  button?: number,\r\n  buttonText?: string,\r\n) => {\r\n  return { name, id, text, button, buttonText };\r\n};\r\nlet data = {\r\n  name: 'test',\r\n  ownerName: 'test',\r\n  phoneNumber: '010-0000-0000',\r\n  email: 'test@test.com',\r\n  password: 'test',\r\n  businessNumber: '1302938741-1231323312',\r\n  accountnumber: '국민 1234-0000-123123',\r\n  accountHolder: '홍길동',\r\n  isApprove: '승인',\r\n  isBlock: 'text',\r\n};\r\nconst rows = [\r\n  createData('쇼핑몰명', 'name', data.name),\r\n  createData('관리자명', 'ownerName', data.ownerName),\r\n  createData(\r\n    '사업자등록번호',\r\n    'businessNumber',\r\n    data.businessNumber,\r\n    1,\r\n    '사업자 등록번호 설정',\r\n  ),\r\n  createData('대표 휴대전화', 'phoneNumber', data.phoneNumber, 1, '대표 휴대전화 설정'),\r\n  createData('대표 이메일', 'email', data.email, 1, '대표 이메일 설정'),\r\n  createData('비밀번호', 'password', data.password, 1, '비밀번호 설정'),\r\n  createData('계좌번호', 'accountNumber', data.accountnumber, 1, '계좌번호 설정'),\r\n  createData('계좌 본인', 'accountHolder', data.accountHolder),\r\n  createData('승인 상태', 'isApprove', data.isApprove),\r\n];\r\n\r\nexport default InfoForm;\r\n","/* eslint-disable prettier/prettier */\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { Col, Form, FormGroup, Label, Input, Container, Row } from 'reactstrap';\r\nimport './style.css';\r\nimport { ModalMol } from '../../molecules';\r\nimport api from '../../../api';\r\n\r\nconst Model3DForm: React.FC = () => {\r\n  const [product3D, setProduct3D] = useState(null as FileList | null);\r\n  const inputRef = useRef(\r\n    null as HTMLInputElement | null,\r\n  ) as React.MutableRefObject<HTMLInputElement>;\r\n\r\n  const getProduct3DModel = async () => {\r\n    // const result = await api.post('/company/model', {});\r\n    // if (result.status === 'success') {\r\n    //\r\n    //   alert('성공');\r\n    //  setProduct3D(result.data);\r\n    // } else {\r\n    //   console.log(result);\r\n    // }\r\n  };\r\n  useEffect(() => {\r\n    getProduct3DModel();\r\n    if (inputRef.current !== null) {\r\n      inputRef.current.setAttribute('directory', '');\r\n      inputRef.current.setAttribute('webkitdirectory', '');\r\n    }\r\n  }, []);\r\n\r\n  const uploadProduct3D = async () => {\r\n    // const result = await api.upload('/company/model', {file: product3D});\r\n    // if (result.status === 'success') {\r\n    //\r\n    //   alert('성공');\r\n    //\r\n    // } else {\r\n    //   console.log(result);\r\n    // }\r\n  };\r\n  const handleclickInput = () => {\r\n    if (inputRef.current !== null) {\r\n      inputRef.current.setAttribute('directory', '');\r\n      inputRef.current.setAttribute('webkitdirectory', '');\r\n    }\r\n    inputRef.current.click();\r\n  };\r\n  const handleOnChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    const files = evt.target.files as FileList;\r\n    setProduct3D(files);\r\n    alert(files[0].name);\r\n    uploadProduct3D();\r\n  };\r\n\r\n  const modalContent = (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <input type=\"file\" onChange={handleOnChange} ref={inputRef} hidden />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col className=\"model-view\">요기에 미리보기 띄어도 좋을거 같아요옹!</Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n  return (\r\n    <div className=\"product-3d-model\">\r\n      <h4>상품 3D 모델</h4>\r\n\r\n      <ModalMol\r\n        className=\"product-3d-model__modal\"\r\n        title=\"3D모델 등록하기\"\r\n        buttonLabel=\"3D모델 등록\"\r\n        confirmButtonText=\"확인\"\r\n        leftButtonText=\"3D모델 업로드\"\r\n        leftButtonAction={handleclickInput}\r\n        name=\"product3DModel\"\r\n        content={modalContent}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Model3DForm;\r\n","import React, { useEffect, useState } from 'react';\nimport {\n  Jumbotron,\n  Col,\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormText,\n} from 'reactstrap';\nimport { OrderTable } from '../../organisms';\nimport './style.css';\n\nconst ManageOrderTemplate: React.FC = () => {\n  return <OrderTable />;\n};\n\nexport default ManageOrderTemplate;\n","import React, { useEffect, useState } from 'react';\nimport {\n  Jumbotron,\n  Col,\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormText,\n} from 'reactstrap';\nimport { ManageProductTable } from '../../organisms';\nimport './style.css';\n\nconst ManageOrderTemplate: React.FC = () => {\n  return <ManageProductTable />;\n};\n\nexport default ManageOrderTemplate;\n","import React, { useState } from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport { InfoForm } from '../../organisms';\r\n\r\ninterface TabPanelProps {\r\n  // eslint-disable-next-line react/require-default-props\r\n  children?: React.ReactNode;\r\n  index: any;\r\n  value: any;\r\n}\r\n\r\nconst TabPanel = (props: TabPanelProps) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst a11yProps = (index: any) => {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nconst InfoTemplate: React.FC = () => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  // eslint-disable-next-line @typescript-eslint/ban-types\r\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n    setValue(newValue);\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\r\n          <Tab label=\"기업정보\" {...a11yProps(0)} />\r\n          {/* <Tab label=\"Item Two\" {...a11yProps(1)} />\r\n          <Tab label=\"Item Three\" {...a11yProps(2)} /> */}\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        {InfoForm}\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        Item Two\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        Item Three\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfoTemplate;\r\n","export const adjustTitleList = [\n  '정산번호',\n  '회사',\n  '기간',\n  '총매출',\n  '수수료',\n  '최종정산금액',\n];\nexport const projuctProfitTitleList = [\n  '상품 아이디',\n  '상품명',\n  '가격',\n  '주문량',\n  '최종정산금액',\n];\nexport const monthList = [\n  '1월',\n  '2월',\n  '3월',\n  '4월',\n  '5월',\n  '6월',\n  '7월',\n  '8월',\n  '9월',\n  '10월',\n  '11월',\n  '12월',\n];\n","import api from 'api';\nimport React, { useState, useEffect } from 'react';\nimport { Table, Container, Input, Button, Row } from 'reactstrap';\nimport { Dummy } from 'utils';\nimport { CompanyFilter } from '../../molecules';\nimport {\n  adjustTitleList,\n  projuctProfitTitleList,\n  monthList,\n} from '../../../commons/constants/string';\nimport './style.css';\n\ntype AdjustPageProps = {\n  isAdmin: boolean;\n};\ntype Adjust = {\n  id: number;\n  company: string;\n  term: string;\n  commission: string;\n  revenue: string;\n  profit: string; // revenue - commission\n};\n\ntype ProductProfit = {\n  id: number;\n  name: string;\n  price: string;\n  commission: string;\n  revenue: string;\n  profit: string; // revenue - commission\n  sellCount: number;\n};\nconst AdjustPageTemplate: React.FC<AdjustPageProps> = ({ isAdmin }) => {\n  const [adjustsDummy] = useState(Dummy.makeAdjusts(1) as Array<Adjust>);\n  const [productProfitsDummy] = useState(\n    Dummy.makeProductProfits(10) as Array<ProductProfit>,\n  );\n  const [company, setCompany] = useState('' as string);\n  const [toggle, setToggle] = useState(false as boolean);\n  const [searchMonth, setSearchMonth] = useState('' as string);\n  // methods\n  const requestAdjust = async () => {\n    // const result = api.post('send adjust api', {});\n  };\n\n  const adjustHeader = adjustTitleList.map(ttl => (\n    <th className=\"column-title\">{ttl}</th>\n  ));\n  const productProfitHeader = projuctProfitTitleList.map(ttl => (\n    <th className=\"column-title\">{ttl}</th>\n  ));\n\n  // index key 추후 id로 대체\n  const productProfits = productProfitsDummy.map((product, index) => (\n    <tr key={index}>\n      <td>{product.id}</td>\n      <td>{product.name}</td>\n      <td>{product.price}</td>\n      <td>{product.sellCount}</td>\n      <td>{product.profit}</td>\n    </tr>\n  ));\n  // 추후 기간 검색 결과로 한줄만 띄울 예정\n  // 아래 상세 목록 토글 추가? => 여유될 경우\n  const adjusts = adjustsDummy.map((adjust, index) => (\n    <tr key={index}>\n      <td>{`${adjust.id}`}</td>\n      <td>{`${adjust.company}`}</td>\n      <td>{`${adjust.term}`}</td>\n      <td>\n        {adjust.revenue} <i />\n      </td>\n      <td>{adjust.commission}</td>\n      <td>{adjust.profit}</td>\n    </tr>\n  ));\n\n  const monthOptions = monthList.map((month, index) => (\n    <option key={index}>{month}</option>\n  ));\n\n  const handleOnChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = evt.target as HTMLInputElement;\n    setSearchMonth(value);\n  };\n\n  return (\n    <>\n      <Container className=\"adjust-page\">\n        <div className=\"adjust-filter\">\n          <h5> 검색 </h5>\n          <div className=\"filter-form\">\n            <div className=\"filter-form__content\">\n              {true ? <CompanyFilter selectCompanyFunc={setCompany} /> : <></>}\n              <span className=\"content__ttl\">정산 일자</span>\n              <span>\n                <Input\n                  type=\"select\"\n                  name=\"month\"\n                  id=\"filter-month\"\n                  onChange={handleOnChange}\n                >\n                  {monthOptions}\n                </Input>\n              </span>\n            </div>\n            <Button>검색</Button>\n          </div>\n        </div>\n        <div className=\"adjust-block\">\n          <div className=\"adjust-content\">\n            <div className=\"content__profit\">\n              <span className=\"company-name content-highlight\">{company}</span>\n              의\n              <span className=\"adjust-month content-highlight\">\n                {searchMonth}\n              </span>\n              입금 금액은\n              <span className=\"adjust-profit content-highlight\">200000원</span>\n              입니다.\n            </div>\n            <div className=\"content__profit-detail\">\n              총 매출 {`250000원`} - 수수료 {`50000원`}\n            </div>\n          </div>\n          <Button\n            onClick={() => {\n              setToggle(!toggle);\n            }}\n          >\n            토글\n          </Button>\n\n          {toggle ? (\n            <Table size=\"sm\" className=\"product-profit-table\">\n              <thead>\n                <tr>{productProfitHeader}</tr>\n              </thead>\n\n              <tbody>{productProfits}</tbody>\n            </Table>\n          ) : null}\n        </div>\n      </Container>\n    </>\n  );\n};\n\nexport default AdjustPageTemplate;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Container,\n  Row,\n  Col,\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormText,\n} from 'reactstrap';\nimport { ModalMol } from '../../molecules';\nimport './style.css';\n\n// 임시\nimport testImg from '../../../assets/product_test.jpeg';\nimport { Model3DForm } from '../../organisms';\n\ninterface ProductInfo {\n  name: string;\n  price: number;\n  stock: number;\n  group: string;\n  desc: string;\n  descImgUrl: string;\n}\n\nconst ProductDetailTemplate: React.FC = () => {\n  // state & variable\n  const [submitValue, setSubmitValue] = useState({} as ProductInfo);\n  const [descImg, setDescImg] = useState(null as File | null);\n\n  const productsGroupList: Array<string> = [\n    '폭신폭신 의자',\n    '안폭신폭신 의자',\n    '물침대',\n    '돌침대',\n  ];\n\n  // comp\n  const productGroup = productsGroupList.map(group => (\n    <option key={group}>{group}</option>\n  ));\n\n  // method\n  const submitProductInfo = async (evt: React.FormEvent<EventTarget>) => {\n    evt.preventDefault();\n    const formData = new FormData();\n\n    formData.append('data', JSON.stringify(submitValue));\n    // formData.append('name', JSON.stringify(submitValue.price));\n    console.log(formData);\n    const config = {\n      headers: {\n        'content-type': 'multipart/form-data',\n      },\n    };\n\n    // await post(url, formData, config)\n\n    alert(`submit Data!${submitValue.name}`);\n  };\n\n  const handleOnChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = evt.target as HTMLInputElement;\n    setSubmitValue({ ...submitValue, [name]: value });\n  };\n\n  const handleOnChangeImg = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const files = evt.target.files as FileList;\n    setDescImg(files[0]);\n    handleOnChange(evt);\n  };\n\n  return (\n    <Container>\n      <Row>\n        <Button type=\"submit\" form=\"productPrimary\">\n          Submit\n        </Button>\n      </Row>\n      <Row>\n        <Col xs=\"5\">\n          <div className=\"product-img\">\n            <h4 className=\"produnct-img__title\">상품 이미지</h4>\n            <div className=\"product-img__content\">\n              <Form>\n                <FormGroup>\n                  <Input type=\"file\" multiple name=\"productExFile\" id=\"productExFile\" />\n                </FormGroup>\n              </Form>\n              <div className=\"content__main\">\n                <img className=\"main-img\" src={testImg} alt=\"\" />\n              </div>\n            </div>\n          </div>\n          <Model3DForm />\n        </Col>\n        <Col xs=\"7\">\n          <Form id=\"productPrimary\" onSubmit={submitProductInfo}>\n            <FormGroup>\n              <Label for=\"productName\">상품명</Label>\n              <Input\n                type=\"text\"\n                name=\"name\"\n                id=\"productName\"\n                value={submitValue.name}\n                onChange={handleOnChange}\n                placeholder=\"상품 이름을 적어주세요.\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"productPrice\">상품 가격</Label>\n              <Input\n                type=\"number\"\n                name=\"price\"\n                id=\"productPrice\"\n                value={submitValue.price}\n                onChange={handleOnChange}\n                placeholder=\"판매 가격을 적어주세요.\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"productStock\">재고</Label>\n              <Input\n                type=\"number\"\n                name=\"stock\"\n                id=\"productStock\"\n                value={submitValue.stock}\n                onChange={handleOnChange}\n                placeholder=\"판매 수량을 적어주세요.\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"productGroup\">그룹</Label>\n              <Input\n                type=\"select\"\n                name=\"group\"\n                id=\"productGroup\"\n                value={submitValue.name}\n                onChange={handleOnChange}\n              >\n                {productGroup}\n              </Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"productDesc\">상품 상세 설명</Label>\n              <Input\n                type=\"textarea\"\n                name=\"desc\"\n                id=\"productDesc\"\n                value={submitValue.desc}\n                onChange={handleOnChange}\n                maxLength={500}\n                placeholder=\"상품에 대한 간단한 설명을 적어주세요 :)\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"productDescImg\">상품 상세 이미지</Label>\n              <Input\n                type=\"file\"\n                name=\"descImgUrl\"\n                id=\"productDescImg\"\n                onChange={handleOnChangeImg}\n              />\n              <FormText color=\"muted\">상품 상세 설명 이미지를 넣어주세요 :)</FormText>\n            </FormGroup>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default ProductDetailTemplate;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Container } from 'reactstrap';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\nimport './style.css';\nimport Topbar from '../TopBar';\nimport {\n  ProductPageTemplate,\n  RegisterCompanyTemplate,\n  ManageOrderTemplate,\n  InfoTemplate,\n  AdjustPageTemplate,\n  ProductDetailTemplate,\n  ManageProductTemplate,\n} from '../../template';\n\ntype ContentProps = {\n  sidebarIsOpen: boolean;\n  toggleSidebar: VoidFunction;\n};\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nconst Content = ({ sidebarIsOpen, toggleSidebar }: ContentProps) => {\n  const { path } = useRouteMatch(); // 요청시의 path?\n  console.log('path : ', path);\n  return (\n    <Container fluid className={classNames('content', { 'is-open': sidebarIsOpen })}>\n      <div id=\"content_container\">\n        <Switch>\n          <Route exact path={`${path}/Register`} component={RegisterCompanyTemplate} />\n          <Route exact path={`${path}/Product`} component={ProductPageTemplate} />\n          <Route exact path={`${path}/Product/:id`} component={ProductDetailTemplate} />\n          <Route exact path={`${path}/ManageOrder`} component={ManageOrderTemplate} />\n          <Route exact path={`${path}/Info`} component={InfoTemplate} />\n          <Route exact path={`${path}/Adjust`} component={AdjustPageTemplate} />\n          <Route exact path={`${path}/ManageProduct`} component={ManageProductTemplate} />\n        </Switch>\n      </div>\n    </Container>\n  );\n};\n\nexport default Content;\n","export default __webpack_public_path__ + \"static/media/slack.4c64bd41.png\";","/* eslint-disable prettier/prettier */\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faHome,\n  faBriefcase,\n  faPaperPlane,\n  faQuestion,\n  faImage,\n  faCopy,\n  faCashRegister,\n  faHouseUser,\n  faChartPie,\n} from '@fortawesome/free-solid-svg-icons';\nimport { NavItem, NavLink, Nav } from 'reactstrap';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport './style.css';\nimport { SubMenu } from '../index';\nimport { SideBarItem } from '../../molecules';\nimport logo from '../../../assets/images/slack.png';\n\nconst imgStyle = {\n  width: '65px',\n};\ntype SideBarProps = {\n  isOpen: boolean;\n  toggle: VoidFunction;\n};\nconst SideBar: React.FC<SideBarProps> = ({ isOpen, toggle }) => {\n  const [isAdmin, setIsAdmin] = useState(localStorage.getItem('isAdmin'));\n  return (\n    <div className={classNames('sidebar', { 'is-open': isOpen })}>\n      <div className=\"sidebar-header\">\n        <span color=\"info\" onClick={toggle} style={{ color: '#fff' }}>\n          &times;\n        </span>\n        <a href=\"/Main\">\n          <img src={logo} alt=\"안가구 로고\" style={imgStyle} />\n        </a>\n      </div>\n      <div className=\"side-menu\">\n        <Nav vertical className=\"list-unstyled pb-3\">\n          <br />\n          {/* <SubMenu title=\"Home\" icon={faHome} items={submenus[0]} />\n          <SideBarItem title={'About'} url={'/about'} icon={faBriefcase} />\n          <SubMenu title=\"Pages\" icon={faCopy} items={submenus[1]} /> */}\n          {isAdmin === 'true' ? (\n            <SideBarItem title={'상품관리'} url={'/Main/ManageProduct'} icon={faHouseUser} />\n          ) : (\n            <SideBarItem title={'상품관리'} url={'/Main/Product'} icon={faHouseUser} />\n          )}\n          <SideBarItem title={'기업정보'} url={'/Main/Info'} icon={faChartPie} />\n          <SideBarItem title={'주문관리'} url={'/Main/ManageOrder'} icon={faCashRegister} />\n          <SideBarItem title={'상품상세'} url={'/Main/Product/:id'} icon={faPaperPlane} />\n          <SideBarItem title={'정산관리'} url={'/Main/Adjust'} icon={faBriefcase} />\n          <SideBarItem title={'FAQ'} url={'/faq'} icon={faQuestion} />\n          <SideBarItem title={'Contact'} url={'/contact'} icon={faImage} />\n        </Nav>\n      </div>\n    </div>\n  );\n};\n\nconst submenus = [\n  [\n    {\n      title: 'Home 1',\n      target: 'Home-1',\n    },\n    {\n      title: 'Adjusts',\n      target: '/Main/Adjust',\n    },\n    {\n      itle: 'Home 3',\n      target: 'Home-3',\n    },\n  ],\n  [\n    {\n      title: '주문관리',\n      target: `/Main/ManageOrder`,\n    },\n    {\n      title: '상품관리',\n      target: `/Main/Product`,\n    },\n    {\n      title: '기업정보',\n      target: `/Main/Info`,\n    },\n  ],\n];\n\nexport default SideBar;\n","const TopBarLibs = {\r\n  Logout: (e?: any, history?: any) => {\r\n    if (localStorage.getItem('isAdmin')) {\r\n      // 관리자이면\r\n      localStorage.removeItem('isAdmin');\r\n      localStorage.removeItem('token');\r\n    } else {\r\n      // 관리자 아니면\r\n      localStorage.removeItem('token');\r\n    }\r\n    if (history) history.push('/');\r\n  },\r\n  goToRegister: (history: any, url: string) => {\r\n    history.push(url);\r\n  }\r\n};\r\n\r\nexport default TopBarLibs;\r\n","const NavBarStyle = {\r\n  height: '65px',\r\n  background: '#232929',\r\n};\r\nconst ButtonStyle = {\r\n  background: 'black',\r\n  borderColor: '#1c5c59',\r\n};\r\nconst ButtonMargin = {\r\n  marginRight: '3px',\r\n};\r\n\r\nexport { NavBarStyle, ButtonStyle, ButtonMargin };\r\n","import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAlignLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport {\r\n  Navbar,\r\n  Button,\r\n  NavbarToggler,\r\n  Collapse,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n} from 'reactstrap';\r\nimport { Link, useRouteMatch, useHistory } from 'react-router-dom';\r\nimport TopBarLibs from './libs';\r\nimport { NavBarStyle, ButtonStyle, ButtonMargin } from './style';\r\n\r\ntype TopBarProps = {\r\n  toggleSidebar: VoidFunction;\r\n};\r\n\r\nconst TopBar = ({ toggleSidebar }: TopBarProps) => {\r\n  const [topbarIsOpen, setTopbarOpen] = useState(true);\r\n  const toggleTopbar = () => setTopbarOpen(!topbarIsOpen);\r\n  const history = useHistory();\r\n  const { path } = useRouteMatch();\r\n  return (\r\n    <Navbar className=\"navbar shadow-sm p-3   \" expand=\"md\" style={NavBarStyle}>\r\n      <Button color=\"info\" style={ButtonStyle} onClick={toggleSidebar}>\r\n        <FontAwesomeIcon icon={faAlignLeft} />\r\n      </Button>\r\n      <NavbarToggler onClick={toggleTopbar} />\r\n      <Collapse isOpen={topbarIsOpen} navbar>\r\n        <Nav className=\"ml-auto\" navbar>\r\n          <Button\r\n            outline\r\n            color=\"secondary\"\r\n            onClick={e => {\r\n              TopBarLibs.goToRegister(history, `${path}/Register`);\r\n            }}\r\n            style={ButtonMargin}\r\n          >\r\n            사업자 등록 필요\r\n          </Button>{' '}\r\n          <Button\r\n            outline\r\n            color=\"secondary\"\r\n            onClick={e => {\r\n              TopBarLibs.Logout(e, history);\r\n            }}\r\n          >\r\n            로그아웃\r\n          </Button>\r\n        </Nav>\r\n      </Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default TopBar;\r\n","import React, { useState } from 'react';\nimport { SideBar, Content, TopBar } from '../../components';\nimport './style.css';\n\nconst Main: React.FC = () => {\n  const [sidebarIsOpen, setSidebarOpen] = useState(true);\n  const toggleSidebar = () => setSidebarOpen(!sidebarIsOpen);\n\n  return (\n    <div className=\"App wrapper\">\n      <SideBar toggle={toggleSidebar} isOpen={sidebarIsOpen} />\n      <div className=\"flex_vertical\">\n        <TopBar toggleSidebar={toggleSidebar} />\n        <Content toggleSidebar={toggleSidebar} sidebarIsOpen={sidebarIsOpen} />\n      </div>\n    </div>\n  );\n};\n\nexport default Main;\n","const bodyStyle = {\r\n  background: 'antiquewhite',\r\n  height: '100%',\r\n};\r\n\r\nexport { bodyStyle };\r\n","import React from 'react';\nimport { Route, useRouteMatch } from 'react-router-dom';\nimport { LoginTemplate, SignupTemplate } from 'components/template';\nimport { bodyStyle } from './style';\n\nconst Login: React.FC = () => {\n  const { path } = useRouteMatch();\n  console.log('login page', path);\n  return (\n    <div style={bodyStyle}>\n      <Route exact path={`${path}/Signup`} component={SignupTemplate} />\n      <Route exact path={`${path}/Admin/:Admin`} component={LoginTemplate} />\n      <Route exact path={`${path}`} component={LoginTemplate} />\n      <Route exact path={`${path}/Admin/:Admin`} component={LoginTemplate} />\n    </div>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport './App.css';\nimport { Main, Login } from './page';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/Login\" component={Login} />\n        <Route path=\"/Main\" component={Main} />\n        {/* 로그인 정보에 따라 redirect 분기 */}\n        <Route\n          path=\"/\"\n          render={() =>\n            0 ? (\n              <Redirect\n                to={{\n                  pathname: '/Main',\n                }}\n              />\n            ) : (\n              <Redirect\n                to={{\n                  pathname: '/Login',\n                }}\n              />\n            )\n          }\n        />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals.js';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
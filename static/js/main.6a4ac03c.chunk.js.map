{"version":3,"sources":["components/basis/TopBar/index.tsx","utils/dummy.ts","assets/product_test.jpeg","components/template/ProductPage/index.tsx","api/index.js","components/template/LoginForm/index.tsx","components/template/SignupForm/index.tsx","utils/validation.ts","components/template/RegisterCompany/index.tsx","components/basis/Content/index.tsx","components/basis/SideBar/index.tsx","components/basis/SubMenu/index.tsx","page/Main/index.tsx","page/Login/index.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["TopBar","toggleSidebar","useState","topbarIsOpen","setTopbarOpen","Navbar","color","light","className","expand","Button","onClick","icon","faAlignLeft","NavbarToggler","Collapse","isOpen","navbar","Nav","NavItem","NavLink","tag","Link","to","e","window","localStorage","setItem","Dummy","makeProducts","num","chance","Chance","tempArr","i","push","id","integer","min","max","img","name","word","price","dollar","stock","rate","floating","fixed","create_time","date","toDateString","ProductPage","products","productsHeader","map","ttl","productList","product","index","type","alt","src","testImg","hostId","location","hostname","split","server","setCommonParams","params","key","getItem","api","get","endpoint","axios","response","data","post","headers","querystring","put","delete","LoginForm","url","useRouteMatch","setId","pw","setPw","getLogin","useHistory","a","email","password","result","status","alert","console","log","Form","FormGroup","Input","value","placeholder","onChange","target","href","SignupForm","submitValue","setSubmitValue","submitUserInfo","evt","preventDefault","formData","FormData","append","JSON","stringify","handleOnChange","Container","Row","Col","md","size","onSubmit","Label","for","test","passwordConfirm","str1","str2","phone","commpany","xs","account","form","block","RegisterBusin","Jumbotron","row","sm","FormText","check","offset","Content","sidebarIsOpen","fluid","classNames","exact","path","component","RegisterCompany","submenus","title","itle","SideBar","toggle","style","vertical","faHome","items","faBriefcase","faCopy","faImage","faQuestion","faPaperPlane","SubMenu","collapsed","setCollapsed","item","App","setSidebarOpen","Login","Main","render","pathname","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6a4ac03c.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAlignLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport {\r\n  Navbar,\r\n  Button,\r\n  NavbarToggler,\r\n  Collapse,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './style.css';\r\n\r\ntype TopBarProps = {\r\n  toggleSidebar: VoidFunction;\r\n};\r\nconst TopBar = ({ toggleSidebar }: TopBarProps) => {\r\n  const [topbarIsOpen, setTopbarOpen] = useState(true);\r\n  const toggleTopbar = () => setTopbarOpen(!topbarIsOpen);\r\n  const Logout= (e:any) => {\r\n    window.localStorage.setItem('', \"\");\r\n  }\r\n  return (\r\n    <Navbar\r\n      color=\"light\"\r\n      light\r\n      className=\"navbar shadow-sm p-3 mb-5 bg-white rounded\"\r\n      expand=\"md\"\r\n    >\r\n      <Button color=\"info\" onClick={toggleSidebar}>\r\n        <FontAwesomeIcon icon={faAlignLeft} />\r\n      </Button>\r\n      <NavbarToggler onClick={toggleTopbar} />\r\n      <Collapse isOpen={topbarIsOpen} navbar>\r\n        <Nav className=\"ml-auto\" navbar>\r\n          <NavItem>\r\n            <NavLink tag={Link} to=\"/Main/register\">\r\n              사업자 등록 필요\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink tag={Link} to=\"/page-2\">\r\n              page 2\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink tag={Link} to=\"/page-3\">\r\n              page 3\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <Button onClick={Logout}>\r\n              로그아웃\r\n            </Button>\r\n          </NavItem>\r\n        </Nav>\r\n      </Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default TopBar;\r\n","import Chance from 'chance';\n\nconst Dummy = {\n  makeProducts: (num: number) => {\n    const chance = new Chance();\n\n    const tempArr = [];\n    for (let i = 0; i < num; i += 1) {\n      tempArr.push({\n        id: chance.integer({ min: 0, max: 100 }),\n        img: '../../assets/product_test.jpeg',\n        name: chance.word(),\n        price: chance.dollar(),\n        stock: chance.integer({ min: 0, max: 100 }),\n        rate: chance.floating({ min: 0, max: 5, fixed: 1 }),\n        create_time: chance.date().toDateString(),\n      });\n    }\n\n    return tempArr;\n  },\n};\n\nexport default Dummy;\n","export default __webpack_public_path__ + \"static/media/product_test.947ae717.jpeg\";","import React, { useState, useEffect } from 'react';\nimport { Button } from 'reactstrap';\nimport './style.css';\nimport { Dummy } from '../../../utils';\nimport api from '../../../api';\n\n// 임시\nimport testImg from '../../../assets/product_test.jpeg';\n\ninterface Product {\n  id: number;\n  img: string;\n  name: string;\n  price: string;\n  stock: number;\n  rate: number;\n  create_time: string;\n}\n\nfunction ProductPage(): React.ReactElement {\n  const productsTitleList = [\n    '',\n    '상품 아이디',\n    '이미지',\n    '상품명',\n    '판매가',\n    '별점',\n    '재고',\n    '등록일자',\n    '',\n  ];\n  // set state\n\n  const [products, setProducts] = useState(Dummy.makeProducts(10));\n  // for api data binding\n  // const [products, setProducts] = useState([] as Array<Product>);\n  // useEffect(() => {\n  //   const getProducts = async () => {\n  //     const result = await api.get('/customer/products', {});\n  //     if (result.status === 'success') {\n  //       setProducts(result.data);\n  //     }\n  //   };\n  //   getProducts();\n  // }, []);\n  const productsHeader = productsTitleList.map(ttl => (\n    <th className=\"column-title\">{ttl}</th>\n  ));\n  const productList = products.map((product, index) => (\n    <tr\n      key={product.id}\n      className={index % 2 === 0 ? 'even pointer' : 'odd pointer'}\n    >\n      <td className=\"a-center\">\n        <input type=\"checkbox\" className=\"flat\" name=\"table_records\" />\n      </td>\n      <td className=\" \">{product.id}</td>\n      <td className=\" \">\n        <img className=\"product__img\" alt=\"\" src={testImg} />\n      </td>\n      <td className=\" \">\n        {product.name} <i className=\"success fa fa-long-arrow-up\" />\n      </td>\n      <td className=\" \">{product.price}</td>\n      <td className=\" \">{5.0}</td>\n      <td className=\" \">{product.stock}</td>\n      <td className=\"a-right a-right \">{product.create_time}</td>\n      <td className=\"last\">\n        <Button color=\"secondary\">수정하기</Button>{' '}\n      </td>\n    </tr>\n  ));\n\n  return (\n    <>\n      <div className=\"product-page\">\n        <div className=\"x_content\">\n          <div className=\"table-responsive\">\n            <table className=\"table table-striped jambo_table bulk_action\">\n              <thead>\n                <tr className=\"headings\">{productsHeader}</tr>\n              </thead>\n\n              <tbody>{productList}</tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default ProductPage;\n","import axios from 'axios';\nimport * as querystring from 'querystring';\n\nconst hostId = window.location.hostname.split('.')[0];\nlet server = 'http://localhost:3002';\n\n// set server url\nif (hostId === 'dev') server = 'https://dev-bapi.angadu.com';\nelse if (hostId === 'real') server = 'https://real-bapi.angagu.com';\n\n// get user token\nconst setCommonParams = params => {\n  params.key = localStorage.getItem('key');\n};\n\nconst api = {\n  async get(endpoint, params) {\n    setCommonParams(params);\n    const response = await axios.get(`${server}${endpoint}`, { params });\n\n    return response.data;\n  },\n\n  async post(endpoint, params) {\n    setCommonParams(params);\n    const headers = {\n      'Content-Type': 'application/x-www-form-urlencoded',\n    };\n    const response = await axios.post(\n      `${server}${endpoint}`,\n      querystring.stringify(params),\n      { headers },\n    );\n\n    return response.data;\n  },\n\n  async put(endpoint, params) {\n    setCommonParams(params);\n    const response = await axios.put(`${server}${endpoint}`, params);\n\n    return response.data;\n  },\n\n  async delete(endpoint, params) {\n    setCommonParams(params);\n    const response = await axios.delete(`${server}${endpoint}`, {\n      data: params,\n    });\n\n    return response.data;\n  },\n};\n\nexport default api;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useRouteMatch, useHistory } from 'react-router-dom';\nimport { Input, Form, FormGroup, Button } from 'reactstrap';\nimport './style.css';\n\nimport api from '../../../api';\n\nconst LoginForm: React.FC = () => {\n  const { url } = useRouteMatch();\n  const [id, setId] = useState('');\n  const [pw, setPw] = useState('');\n  const history = useHistory();\n\n  const getLogin = async () => {\n    const result = await api.post('/customer/login', {\n      email: id,\n      password: pw,\n    });\n    if (result.status === 'success') {\n      alert('로그인 성공');\n    } else {\n      console.log(result);\n    }\n  };\n  return (\n    <div className=\"login_wrapper\">\n      <div className=\"animate form login_form\">\n        <section className=\"login_content\">\n          <Form>\n            <h1>Login Form</h1>\n            <FormGroup>\n              <Input\n                type=\"text\"\n                value={id}\n                id=\"email\"\n                placeholder=\"아이디\"\n                onChange={e => {\n                  setId(`${e.target.value}`);\n                }}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Input\n                type=\"password\"\n                value={pw}\n                placeholder=\"패스워드\"\n                onChange={e => {\n                  setPw(`${e.target.value}`);\n                }}\n              />\n            </FormGroup>\n            <div>\n              <a className=\"reset_pass\" href=\"/Main\" onClick={getLogin}>\n                로그인\n              </a>\n              &nbsp;&nbsp;&nbsp;&nbsp;\n              <a className=\"reset_pass\" href=\"/\">\n                비밀번호를 잊으셨나요?\n              </a>\n            </div>\n\n            <div className=\"clearfix\" />\n\n            <div className=\"separator\">\n              <p className=\"change_link\">\n                아이디가 없으신가요? &nbsp;\n                <Link to={`${url}/Signup`} className=\"to_register\">\n                  회원가입\n                </Link>\n              </p>\n\n              <div className=\"clearfix\" />\n              <br />\n\n              <div>\n                <h1>\n                  <i className=\"fa fa-paw\" /> 안가구\n                </h1>\n              </div>\n            </div>\n          </Form>\n        </section>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  Container,\n  Row,\n  Col,\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormText,\n} from 'reactstrap';\nimport { isEmail, isPassword, isSame } from '../../../utils';\nimport './style.css';\n\ntype UserInfo = {\n  email: string;\n  password: string;\n  passwordConfirm: string;\n  phone: string;\n  commpany: string;\n  account: string;\n};\nconst SignupForm: React.FC = () => {\n  // state & variable\n  const [submitValue, setSubmitValue] = useState({} as UserInfo);\n  const [isValid, setIsValid] = useState(false as boolean);\n\n  const submitUserInfo = async (evt: React.FormEvent<EventTarget>) => {\n    evt.preventDefault();\n\n    // 보내기 전 validation 필요\n    const formData = new FormData();\n\n    formData.append('data', JSON.stringify(submitValue));\n    // formData.append('name', JSON.stringify(submitValue.price));\n    console.log(formData);\n    const config = {\n      headers: {\n        'content-type': 'multipart/form-data',\n      },\n    };\n    // send api\n    // await post(url, formData, config)\n\n    alert(`submit Data!${submitValue.email}`);\n  };\n\n  const handleOnChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = evt.target as HTMLInputElement;\n    console.log(name, value);\n    setSubmitValue({ ...submitValue, [name]: value });\n  };\n\n  return (\n    <Container className=\"signup-form\">\n      <Row className=\"signup-form__row\">\n        <Col md={{ size: 5 }}>\n          <h2>회원가입</h2>\n        </Col>\n      </Row>\n      <Row className=\"signup-form__row\">\n        <Col className=\"form-content\" md={{ size: 5 }}>\n          <Form id=\"signup\" onSubmit={submitUserInfo}>\n            <FormGroup>\n              <Label for=\"userEmail\">이메일</Label>\n              <Input\n                type=\"text\"\n                name=\"email\"\n                id=\"userEmail\"\n                value={submitValue.email}\n                onChange={evt => {\n                  if (!isEmail(evt.target.value)) {\n                    console.log('이메일 형식이 올바르지 않습니다.');\n                  } else {\n                    console.log('이메일 가능가능~');\n                  }\n                  handleOnChange(evt);\n                }}\n                placeholder=\"이메일을 적어주세요.\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"userPassword\">비밀번호</Label>\n              <Input\n                type=\"password\"\n                name=\"password\"\n                id=\"userPassword\"\n                value={submitValue.password}\n                onChange={evt => {\n                  if (!isPassword(evt.target.value)) {\n                    console.log('비밀번호 형식이 올바르지 않습니다.');\n                  } else {\n                    console.log('비번 가능가능~');\n                  }\n                  handleOnChange(evt);\n                }}\n                placeholder=\"비밀번호를 적어주세요.\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"userPasswordConfirm\">비밀번호 확인</Label>\n              <Input\n                type=\"password\"\n                name=\"passwordConfirm\"\n                id=\"userPasswordConfirm\"\n                value={submitValue.passwordConfirm}\n                onChange={evt => {\n                  if (!isSame(evt.target.value, submitValue.password)) {\n                    console.log('비밀번호가 다릅니다.');\n                  } else {\n                    console.log('비번 가능가능~');\n                  }\n                  handleOnChange(evt);\n                }}\n                placeholder=\"비밀번호를 한번 더 적어주세요.\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"userPhone\">휴대폰</Label>\n              <Input\n                type=\"text\"\n                name=\"phone\"\n                id=\"userPhone\"\n                value={submitValue.phone}\n                onChange={handleOnChange}\n                placeholder=\"휴대폰 번호를 적어주세요.\"\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"userCommpany\">회사명</Label>\n              <Input\n                type=\"text\"\n                name=\"commpany\"\n                id=\"userCommpany\"\n                value={submitValue.commpany}\n                onChange={handleOnChange}\n                placeholder=\"회사 이름을 적어주세요.\"\n              />\n            </FormGroup>\n            <Row>\n              <Col xs=\"3\">\n                <FormGroup>\n                  <Label for=\"userAccount\">은행</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"account\"\n                    id=\"userAccount\"\n                    value={submitValue.account}\n                    onChange={handleOnChange}\n                    placeholder=\"은행명\"\n                  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"6\">\n                <FormGroup>\n                  <Label for=\"userAccount\">계좌번호</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"account\"\n                    id=\"userAccount\"\n                    value={submitValue.account}\n                    onChange={handleOnChange}\n                    placeholder=\"계좌번호를 적어주세요.\"\n                  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"3\">\n                <FormGroup>\n                  <Label for=\"userAccount\">계좌주</Label>\n                  <Input\n                    type=\"text\"\n                    name=\"account\"\n                    id=\"userAccount\"\n                    value={submitValue.account}\n                    onChange={handleOnChange}\n                    placeholder=\"계좌주명\"\n                  />\n                </FormGroup>\n              </Col>\n            </Row>\n            <Row className=\"form-btn\">\n              <Button\n                className=\"form-btn__submit\"\n                type=\"submit\"\n                form=\"signup\"\n                color=\"info\"\n                block\n              >\n                안오구에 회원가입 하기\n              </Button>\n              <Col className=\"form-btn\">\n                <Link className=\"form-btn__login\" to=\"/Login\">\n                  로그인으로 돌아가기\n                </Link>\n              </Col>\n            </Row>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default SignupForm;\n","export const isEmail = (value: string): boolean => {\n  // eslint-disable-next-line no-useless-escape\n  const regExp = /^[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/i;\n  return regExp.test(value);\n};\nexport const isPassword = (value: string): boolean => {\n  // eslint-disable-next-line no-useless-escape\n  const regExp = /^(?=.*\\d)(?=.*[a-zA-Z])[0-9a-zA-Z]{8,12}$/;\n  return regExp.test(value);\n};\nexport const isSame = (str1: string, str2: string): boolean => {\n  return str1 === str2;\n};\n","import React, { useEffect, useState } from 'react';\nimport {\n  Jumbotron,\n  Col,\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormText,\n} from 'reactstrap';\nimport './style.css';\n\nconst RegisterBusin: React.FC = () => {\n  return (\n    <Jumbotron>\n      <Form>\n        <FormGroup row>\n          <Label for=\"businessName\" sm={2}>\n            사업자 명\n          </Label>\n          <Col sm={10}>\n            <Input\n              type=\"email\"\n              name=\"email\"\n              id=\"businessName\"\n              placeholder=\"사업자 명을 입력하세요\"\n            />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label for=\"phoneNumber\" sm={2}>\n            연락처\n          </Label>\n          <Col sm={10}>\n            <Input\n              type=\"email\"\n              name=\"phone\"\n              id=\"phoneNumber\"\n              placeholder=\"000-0000-0000\"\n            />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label for=\"exampleText\" sm={2}>\n            추가 필요사항 기입\n          </Label>\n          <Col sm={10}>\n            <Input type=\"textarea\" name=\"text\" id=\"exampleText\" />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label for=\"exampleFile\" sm={2}>\n            File\n          </Label>\n          <Col sm={10}>\n            <Input type=\"file\" name=\"file\" id=\"exampleFile\" />\n            <FormText color=\"muted\">\n              사업자 등록증, 통신판매업 신고증을 업로드해주세요\n            </FormText>\n          </Col>\n        </FormGroup>\n        <FormGroup check row>\n          <Col sm={{ size: 10, offset: 2 }}>\n            <Button>등록 신청하기</Button>\n          </Col>\n        </FormGroup>\n      </Form>\n    </Jumbotron>\n  );\n};\n\nexport default RegisterBusin;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Container } from 'reactstrap';\nimport { Switch, Route } from 'react-router-dom';\nimport './style.css';\nimport Topbar from '../TopBar';\nimport { ProductPage, RegisterCompany } from '../../template';\n\ntype ContentProps = {\n  sidebarIsOpen: boolean;\n  toggleSidebar: VoidFunction;\n};\n\nconst Content = ({ sidebarIsOpen, toggleSidebar }: ContentProps) => (\n  <Container\n    fluid\n    className={classNames('content', { 'is-open': sidebarIsOpen })}\n  >\n    <Topbar toggleSidebar={toggleSidebar} />\n    <div id=\"content_container\">\n      <Switch>\n        <Route exact path=\"/\" component={(): any => 'Hello'} />\n        <Route exact path=\"/Main/register\" component={RegisterCompany} />\n        <Route exact path=\"/Pages\" component={(): any => 'Pages'} />\n        <Route exact path=\"/faq\" component={(): any => 'FAQ'} />\n        <Route exact path=\"/contact\" component={(): any => 'Contact'} />\n        <Route exact path=\"/Home-1\" component={(): any => 'Home-1'} />\n        <Route exact path=\"/Home-2\" component={(): any => 'Home-2'} />\n        <Route exact path=\"/Home-3\" component={(): any => 'Home-3'} />\n        <Route exact path=\"/Main/Product\" component={ProductPage} />\n        <Route exact path=\"/Page-2\" component={(): any => 'Page-2'} />\n        <Route exact path=\"/page-1\" component={(): any => 'page-1'} />\n        <Route exact path=\"/page-2\" component={ProductPage} />\n        <Route exact path=\"/page-3\" component={(): any => 'page-3'} />\n        <Route exact path=\"/page-4\" component={(): any => 'page-4'} />\n      </Switch>\n    </div>\n  </Container>\n);\n\nexport default Content;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faHome,\n  faBriefcase,\n  faPaperPlane,\n  faQuestion,\n  faImage,\n  faCopy,\n} from '@fortawesome/free-solid-svg-icons';\nimport { NavItem, NavLink, Nav } from 'reactstrap';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport './style.css';\nimport { SubMenu } from 'components';\n\ntype SideBarProps = {\n  isOpen: boolean;\n  toggle: VoidFunction;\n};\n\nconst SideBar: React.FC<SideBarProps> = ({ isOpen, toggle }) => (\n  <div className={classNames('sidebar', { 'is-open': isOpen })}>\n    <div className=\"sidebar-header\">\n      <span color=\"info\" onClick={toggle} style={{ color: '#fff' }}>\n        &times;\n      </span>\n      <a href=\"/Main\">안가구</a>\n    </div>\n    <div className=\"side-menu\">\n      <Nav vertical className=\"list-unstyled pb-3\">\n        <p>Dummy Heading</p>\n        <SubMenu title=\"Home\" icon={faHome} items={submenus[0]} />\n        <NavItem>\n          <NavLink tag={Link} to={'/about'}>\n            <FontAwesomeIcon icon={faBriefcase} className=\"mr-2\" />\n            About\n          </NavLink>\n        </NavItem>\n        <SubMenu title=\"Pages\" icon={faCopy} items={submenus[1]} />\n        <NavItem>\n          <NavLink tag={Link} to={'/pages'}>\n            <FontAwesomeIcon icon={faImage} className=\"mr-2\" />\n            Portfolio\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink tag={Link} to={'/faq'}>\n            <FontAwesomeIcon icon={faQuestion} className=\"mr-2\" />\n            FAQ\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink tag={Link} to={'/contact'}>\n            <FontAwesomeIcon icon={faPaperPlane} className=\"mr-2\" />\n            Contact\n          </NavLink>\n        </NavItem>\n      </Nav>\n    </div>\n  </div>\n);\n\nconst submenus = [\n  [\n    {\n      title: 'Home 1',\n      target: 'Home-1',\n    },\n    {\n      title: 'Home 2',\n      target: 'Home-2',\n    },\n    {\n      itle: 'Home 3',\n      target: 'Home-3',\n    },\n  ],\n  [\n    {\n      title: 'Page 1',\n      target: 'Page-1',\n    },\n    {\n      title: 'Product',\n      target: '/Main/Product',\n    },\n  ],\n];\n\nexport default SideBar;\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { Collapse, NavItem, NavLink } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from 'react-router-dom';\nimport './style.css';\n\ntype SubMenuProps = {\n  icon: any;\n  title: string;\n  items: any;\n};\n\nconst SubMenu: React.FC<SubMenuProps> = ({ icon, title, items }) => {\n  const [collapsed, setCollapsed] = useState(true);\n  const toggle = () => setCollapsed(!collapsed);\n\n  return (\n    <div>\n      <NavItem\n        onClick={toggle}\n        className={classNames({ 'menu-open': !collapsed })}\n      >\n        <NavLink className=\"dropdown-toggle\">\n          <FontAwesomeIcon icon={icon} className=\"mr-2\" />\n          {title}\n        </NavLink>\n      </NavItem>\n      <Collapse\n        isOpen={!collapsed}\n        navbar\n        className={classNames('items-menu', { 'mb-1': !collapsed })}\n      >\n        {items.map((item: any, index: any) => (\n          <NavItem key={index} className=\"pl-4\">\n            <NavLink tag={Link} to={item.target}>\n              {item.title}\n            </NavLink>\n          </NavItem>\n        ))}\n      </Collapse>\n    </div>\n  );\n};\n\nexport default SubMenu;\n","import React, { useState } from 'react';\nimport { SideBar, Content } from '../../components';\nimport './style.css';\n\nconst App: React.FC = () => {\n  const [sidebarIsOpen, setSidebarOpen] = useState(true);\n  const toggleSidebar = () => setSidebarOpen(!sidebarIsOpen);\n\n  return (\n    <div className=\"App wrapper\">\n      <SideBar toggle={toggleSidebar} isOpen={sidebarIsOpen} />\n      <Content toggleSidebar={toggleSidebar} sidebarIsOpen={sidebarIsOpen} />\n    </div>\n  );\n};\n\nexport default App;\n","import React, { useState, useEffect } from 'react';\nimport { Link, Route, Switch, useRouteMatch } from 'react-router-dom';\nimport { LoginForm, SignupForm } from 'components/template';\n\nconst Login: React.FC = () => {\n  const { path } = useRouteMatch();\n  return (\n    <>\n      <Route exact path={`${path}/Signup`} component={SignupForm} />\n      <Route exact path={`${path}`} component={LoginForm} />\n    </>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport './App.css';\nimport { SignupForm } from 'components/template';\nimport { Main, Login } from './page';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/Login\" component={Login} />\n\n        <Route path=\"/Main\" component={Main} />\n        <Route\n          path=\"/\"\n          render={() =>\n            0 ? (\n              <Redirect\n                to={{\n                  pathname: '/Main',\n                }}\n              />\n            ) : (\n              <Redirect\n                to={{\n                  pathname: '/Login',\n                }}\n              />\n            )\n          }\n        />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals.js';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}